{
	"name": "PL_DATA_BLOB_SQLSERVER_METADATA",
	"properties": {
		"activities": [
			{
				"name": "TruncateMovieStgData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[TruncateMovieTables]"
				},
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Movie",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupControlTable",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "TruncateMovieStgData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_Movie_ControlMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupControlTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupControlTable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@item().srcFolder",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item().srcFileName",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": {
									"value": "@item().diuValue",
									"type": "Expression"
								},
								"translator": {
									"value": "@json(item().ColumnMapping)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ADLS_Movies",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ASQL_Movies",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item().destinationTable",
											"type": "Expression"
										},
										"schema": {
											"value": "@item().destSchema",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "LogErrors",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[etl].[spPipelineErrors]",
								"storedProcedureParameters": {
									"ActivityName": {
										"value": {
											"value": "Copy Data Activity",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorCode": {
										"value": {
											"value": "@activity('Copy data1').output.errors[0].Code",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('Copy data1').output.errors[0].Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"FailureType": {
										"value": {
											"value": "@activity('Copy data1').output.errors[0].EventType",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_Movie",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "LogSuccess",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[etl].[InsertCopyDataActivityLog]",
								"storedProcedureParameters": {
									"ActivityName": {
										"value": "Copy Data Activity",
										"type": "String"
									},
									"BillingDuration": {
										"value": {
											"value": "@activity('Copy data1').output.billingReference.totalBillableDuration[0].duration",
											"type": "Expression"
										},
										"type": "Decimal"
									},
									"CopyDuration": {
										"value": {
											"value": "@activity('Copy data1').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"EndTime": {
										"value": {
											"value": "@addseconds(activity('Copy data1').output.executionDetails[0].start,activity('Copy data1').output.executionDetails[0].duration)\n",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"ExecutionStatus": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].status",
											"type": "Expression"
										},
										"type": "String"
									},
									"MeterType": {
										"value": {
											"value": "@activity('Copy data1').output.billingReference.totalBillableDuration[0].meterType",
											"type": "Expression"
										},
										"type": "String"
									},
									"ParallelCopies": {
										"value": {
											"value": "@activity('Copy data1').output.usedParallelCopies",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"ProcessedFilesCount": {
										"value": {
											"value": "@activity('Copy data1').output.filesRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"QueueDuration": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].profile.queue.duration",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ReadRowsCount": {
										"value": {
											"value": "@activity('Copy data1').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"StartTime": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TransferDuration": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].profile.transfer.duration",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"UsedDIU": {
										"value": {
											"value": "@activity('Copy data1').output.executionDetails[0].usedDataIntegrationUnits",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"WrittenRowsCount": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_Movie",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "NotifyViaEmail",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"url": {
									"value": "https://prod-24.francecentral.logic.azure.com:443/workflows/ff79e0569c3640bf99be875e5c9b9f71/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=FWMA6s8bnjtLTcHrZCgpUMHLUWxdCi7HrOllKwbRHwI",
									"type": "Expression"
								},
								"body": {
									"value": "{\n    \"receiver\": \"kranthi_gajula@epam.com\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"message\": \"@{activity('Copy data1').output.executionDetails[0].status}\"\n}",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2024-10-17T15:25:28Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}